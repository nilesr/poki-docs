.TH BRL 1
.SH NAME
brl \- inspect and configure your Bedrock Linux system
.SH SYNOPSIS
.B brl
.IR subcommand ...
.SH DESCRIPTION
This document describes the \fBbrl\fR command and its subcommands. The \fBbrl\fR command is part of the Bedrock Linux userland ⟨https://bedrocklinux.org⟩.
.P
.B brl
provides several commands for monitoring and controlling a running Bedrock Linux system.
.P
It is broken down into several subcommands, specifically
.IR strat ", " "fetch" ", " which ", " remove ", " rename ", " enable ", " disable ", " fix ", " ignore ", " unignore ", " alias ", " deref ", " update " and " report

.SH SUBCOMMANDS
.SS STRAT
.B USAGE
.RS 4
.B brl strat
[\fB\-\-arg0\fR \fIname\fR]
[\fB\-l\fR | \fB\-\-local\fR]
.IR "stratum command" "..."
.P
.R executes \fIcommand\fR in the specified \fIstratum\fR.
.R If \fB\-\-arg0\fR is specified, then \fIname\fR is passed in as \fIargv[0]\fR when invoking the command.
.R If \fB\-l\fR or \fB\-\-local\fR is specified, then the command will be unable to use commands from other strata.
.P
.R For full information, see \fBstrat\fR(1)
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBstrat arch make\fR
gcc     test.c   \-o test
.R $ \fBrm test\fR
.R $ \fBstrat \-\-local arch make\fR
gcc     test.c   \-o test
make: gcc: Command not found
make: *** [Makefile:2: test] Error 127
.fi
.P
.RE


.SS FETCH
.B USAGE
.RS 4
.B brl fetch
[\fB\-a\fR | \fB\-\-arch\fR \fIarch\fR]
[\fB\-m\fR | \fB\-\-mirror\fR \fImirror\fR]
[\fB\-r\fR | \fB\-\-release\fR \fIrelease\fR]
[\fB\-R\fR | \fB\-\-region\fR \fIregion\fR]
[\fB\-n\fR | \fB\-\-name\fR \fIname\fR]
[\fB\-i\fR | \fB\-\-include\fR \fIpackages\fR...]
.I distro
.P
.B brl fetch list\-distros
.P
.B brl fetch list\-releases
.I distro
.P
.B brl fetch list\-regions
.I distro
.P
.B brl fetch list\-mirrors
.I distro
.P
.R Downloads the requested \fIdistro\fR as a strata, and optionally enables it.
.P
.B brl fetch
.R reads from configuration files in \fI/bedrock/share/distros/\fR. The ones that ship by default with Bedrock Linux 0.7 Poki are
.BR alpine ", " arch ", " debian ", " devuan ", " ubuntu ", " void " and " void\-musl.
.P
If \fIarch\fR is not specified, it is determined automatically using \fBuname\fR(1).
If \fImirror\fR or \fIregion\fR are not specified, they are determined automatically using \fBnetselect\fR(1).
If \fIname\fR is not specified, it is set to \fIdistro\fR.
.RE
.P
.B CONFIGURATION
.RS 4
.B brl fetch
.R has two configuration settings, which can be changed at
.\" TODO this is not going to be the final location
.IR /bedrock/etc/brg.conf .
.P
.RI "The configuration item " ENABLE_AFTER_ACQUIRE " determines whether the stratum should be enabled after being downloaded and installed. The default value is " false
.P
.RI "The configuration item " CONFIG_ENABLE " determines how the stratum should be configured after being downloaded and installed. The default value is " boot ", indicating that the stratum should be automatically enabled on each boot. To prevent the stratum from being enabled automatically on boot, set the value to " manual ". These values mirror " /bedrock/etc/strata.conf .
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBstrat arch echo Hello, world\fR
strat: could not find state file for stratum
    arch
at
    /bedrock/run/enabled_strata/arch
Perhaps the stratum is disabled or you typod the name?
.R $ \fBbrl fetch arch\fR
[output trimmed]
.R $ \fBbrl enable arch\fR
[output trimmed]
.R $ \fBstrat arch echo Hello, world\fR
Hello, world
.fi
.P
.RE


.SS WHICH
.B USAGE
.RS 4
.B brl which
.P
.B brl which
.I command
.P
.R If \fIcommand\fR was supplied, \fBbrl which\fR prints the first stratum that contains that command.
.R The current stratum is given top priority. After that, strata follow in the priority that \fBcrossfs\fR(1) is using for \fI/bedrock/brpath\fR, which is configured in \fI/bedrock/etc/brp.conf\fR. For more information on configuring the priorty order, see \fBcrossfs\fR(1).
.\" TODO brp.conf is NOT where it's going to be.
.R After the stratum name, an indicator is printed in parenthesis. If the stratum where the command is found is the same as the invoking stratum, the indicator is \fB(direct)\fR. If it is another stratum, the indicator is \fB(implicit)\fR. If the command is not found in any stratum, the only output is \fB(nonexistent)\fR.
.P
.R if \fIcommand\fR is not supplied, the invoking stratum is printed.
.P
.B brl which
.R always returns 0, even if \fIcommand\fR was not found in any strata.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which\fR
arch
.R $ \fBbrl which cat\fR
arch (direct)
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.R $ \fBbrl which unlikely_to_exist\fR
(nonexistent)
.fi
.P
.RE


.SS REMOVE
.B USAGE
.RS 4
.B brl remove
.I stratum
.P
.R If \fIstratum\fR is not an alias, deletes the specified \fIstratum\fR permanently. If \fIstratum\fR is not an alias and is currently enabled, \fBbrl remove\fR will refuse to delete it, you must \fBbrl disable\fR it first. If \fIstratum\fR is an alias, it is removed, but the stratum it pointed to is kept.
.P
.R Local files in \fIstratum\fR are NOT kept. \fIstratum\fR\-specific files in directories such as \fI/bedrock/etc/strata.d\fR are kept.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.R $ \fBbrl remove artful\fR
.R $ \fBbrl which apt\-get\fR
(nonexistent)
.fi
.P
.RE


.SS RENAME
.B USAGE
.RS 4
.B brl rename
.I old new
.P
.R Renames the stratum \fIold\fR to \fInew\fR. If \fIold\fR was an alias, it is deleted, and a new alias pointing to where \fIold\fR pointed is created with the name \fInew\fR. If \fIold\fR is not an alias, it must be disabled (via \fBbrl disable\fR) before you can rename it.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.R $ \fBbrl disable artful\fR
.R $ \fBbrl rename artful ubuntu\fR
.R $ \fBbrl enable ubuntu\fR
.R $ \fBbrl which apt\-get\fR
ubuntu (implicit)
.fi
.P
.RE


.SS ENABLE
.B USAGE
.RS 4
.B brl enable
.I stratum
.P
.R Enables \fIstratum\fR, creating all mount points as necessary. If \fIstratum\fR is configured with \fIenable=boot\fR then this is done automatically on boot by \fBbedrock_init\fR(1). The stratum providing \fBinit\fR(1) is always enabled.
.P
.R Enabling \fIstratum\fR first runs the preenable scripts, then shares global mountpoints into \fI/bedrock/strata/\fBstratum\fR. After that, the postenable script is run, \fIstratum\fR is set as enabled by creating \fI/bedrock/run/enabled_strata/\fBstratum\fR, and \fI/bedrock/brpath\fR is updated. For more information on \fI/bedrock/brpath\fR see \fBcrossfs\fR(1).
.P
.R Preenable scripts and postenable scripts may be specified in \fI/bedrock/etc/stratum.conf\fR, or you may specify a framework for \fIstratum\fR and that framework can have its own preenable and postenable scripts. The \fIdefault\fR framework is used if no framework is specified for \fIstratum\fR. The default framework has three preenable scripts. These are:
.P
.RS 4
.nf
preenable = /bedrock/share/brs/force\-symlinks
preenable = /bedrock/share/brs/setup\-etc
preenable = /bedrock/share/brs/run\-lock
.fi
.RE
.P
.R While a stratum is disabled, commands cannot be run in that stratum, but its files can still be accessed through \fI/bedrock/strata/\fR.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
(nonexistent)
.R $ \fBapt\-get\fR
sh: apt\-get: command not found
.R $ \fBbrl enable artful\fR
Enabling artful
  Running preenable for artful... done
  Mounting artful... done
  Running postenable for artful... done
  Setting artful as enabled... done
  Updating brpath... done
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.fi
.P
.RE


.SS DISABLE
.B USAGE
.RS 4
.B brl disable
.I stratum
.P
.R Disables \fIstratum\fR, unmounting all shared mount points inside it. The stratum providing \fBinit\fR(1) cannot be disabled, because all processes running in the stratum must be killed, and if \fBinit\fR(1) dies, then the kernel will panic. It may be possible to manually disable the init stratum by first using \fBpivot_root\fR(1), but this is untested and not recommended.
.P
.R Disabling \fIstratum\fR first runs the predisable scripts, kills all processes running in \fIstratum\fR, then unmounts global mountpoints from \fI/bedrock/strata/\fBstratum\fR. After that, the postdisable scripts are run, \fIstratum\fR is set as disabled by removing \fI/bedrock/run/enabled_strata/\fBstratum\fR, and \fI/bedrock/brpath\fR is updated. For more information on \fI/bedrock/brpath\fR see \fBcrossfs\fR(1).
.P
.R Predisable scripts and postdisable scripts may be specified in \fI/bedrock/etc/stratum.conf\fR, or you may specify a framework for \fIstratum\fR and that framework can have its own predisable and postdisable scripts. The \fIdefault\fR framework is used if no framework is specified for \fIstratum\fR. The default framework does not have any predisable or postdisable scripts.
.P
.R While a stratum is disabled, commands cannot be run in that stratum, but its files can still be accessed through \fI/bedrock/strata/\fR.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.R $ \fBbrl disable artful\fR
Disabling artful
  Running predisable for artful... done
  Killing processes in stratum artful... done
  Unmounting artful... done
  Running postdisable for artful... done
  Setting artful as disabled... done
  Updating brpath... done
.R $ \fBbrl which apt\-get\fR
(nonexistent)
.fi
.P
.RE


.SS FIX
.B USAGE
.RS 4
.B brl fix
.I stratum
.P
.R Nobody knows what this does.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl fix artful\fR
Attempting rescue...
Failed: it's totally fucking fucked mate, big time.
.fi
.P
.RE


.SS IGNORE
.B USAGE
.RS 4
.B brl ignore
.I stratum
.P
.R Tells Bedrock Linux to pretend that this stratum doesn't exist, even if it has configuration in \fI/bedrock/etc/strata.conf\fR. This is invoked automatically by \fBbrl fetch\fR to prevent problems arising from interacting with a stratum that is still being installed, so you typically don't need to invoke it manually.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.R $ \fBbrl disable artful\fR
[output trimmed]
.R $ \fBbrl ignore artful\fR
.R $ \fBbrl enable artful\fR
.\" TODO what should this output?
TODO put message here
.fi
.P
.RE


.SS IGNORE
.B USAGE
.RS 4
.B brl ignore
.I stratum
.P
.R Tells Bedrock Linux to pretend that \fIstratum\fR doesn't exist, even if it has configuration in \fI/bedrock/etc/strata.conf\fR. This is invoked automatically by \fBbrl fetch\fR to prevent problems arising from interacting with a stratum that is still being installed, so you typically don't need to invoke it manually. \fIstratum\fR may not be ignored if it is currently enabled, you must disable it first using \fBbrl disable\fI
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.R $ \fBbrl disable artful\fR
[output trimmed]
.R $ \fBbrl ignore artful\fR
.R $ \fBbrl enable artful\fR
.\" TODO what should this output?
TODO put message here
.fi
.P
.RE


.SS UNIGNORE
.B USAGE
.RS 4
.B brl unignore
.I stratum
.P
.R Tells Bedrock Linux to stop pretend that \fIstratum\fR doesn't exist. This is invoked automatically by \fBbrl fetch\fR when it is done installing \fIstratum\fR, so you typically don't need to invoke it manually. \fIstratum\fR cannot be enabled if it is ignored.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.\" TODO I want to show artful not displaying in the output of ``bri \-l'' but bri is going away and I don't know what's replacing it
.R $ \fBbrl ignore artful\fR
.R $ \fBbrl which apt\-get\fR
(nonexistent)
.R $ \fBbrl unignore artful\fR
.\" TODO what should this output?
TODO put message here
.R $ \fBbrl enable artful\fR
[output trimmed]
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.fi
.P
.RE


.SS ALIAS
.B USAGE
.RS 4
.B brl alias
.I existing new
.P
.R Creates an alias of the name \fInew\fR, which points to \fIexisting\fR. Aliases in Bedrock Linux are first\-class, so in any \fBbrl\fR command where you write \fIexisting\fR, you will be able to write \fInew\fR instead. Aliases are preserved across reboots. The special alias \fIinit\fR is created automatically by \fBbedrock_init\fR(1) on boot, and points to the stratum that provides \fBinit\fR(1).
.P
.R You may not create aliases to other aliases.
.P
.R \fInew\fR must not be the name of an existing stratum or alias, and \fIexisting\fR must be an existing stratum and may not be an alias.
.P
\fBbrl alias\fR creates a symbolic link at \fI/bedrock/strata/\fBnew\fR pointing to \fIexisting\fR, and creates a file at \fI/bedrock/etc/aliases.d/\fBnew\fR with the correct configuration.
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
(nonexistent)
.R $ \fBbrl enable ubuntu\fR
.\" TODO what should this output?
some error message
.R $ \fBbrl alias artful ubuntu\fR
.R $ \fBbrl enable ubuntu\fR
[output trimmed]
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.fi
.P
.RE


.SS DEREF
.B USAGE
.RS 4
.B brl deref
.I alias
.P
.R Prints the stratum that \fIalias\fR points to, if it is an alias. If it is not an alias, \fIalias\fR is printed. \fIinit\fR is a special alias that always points to the stratum providing
.BR init (1)
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl which apt\-get\fR
artful (implicit)
.R $ \fBbrl deref ubuntu\fR
artful
.R $ \fBbrl deref artful\fR
artful
.fi
.P
.RE

.SS UPDATE
.B USAGE
.RS 4
.B brl update
.P
.R Upgrades a running bedrock system in\-place, including \fBbrl fetch\fR configuration and documentation. \fBbrl update\fR cannot update between major releases of Bedrock Linux, but it will notify you if one is available. 
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl update\fR
Checking... up to date.
.fi
.P
.RE



.SS REPORT
.B USAGE
.RS 4
.B brl report
[\fB\-f\fR \fIfile\fR]
[\fB\-h\fR]
.P
.R Exports a large text file with all of your Bedrock Linux configuration and other relevant system configuration and status. \fIparadigm\fR or one of the other developers may ask you to run this command and send them the output while troubleshooting. If \fB\-f\fR is passed, all output is printed to \fIfile\fR, otherwise all output is pritned to stdout.
.P
.R \fB\-h\fR causes some help text to be printed, and no report is generated.
.P
.R Until Bedrock Linux 0.7.0 Poki, this command was known as \fBbrr\fR(1)
.P
.RE
.B EXAMPLE
.RS 4
.nf
.R $ \fBbrl report | curl \-F'file=@\-' 0x0.st\fR
https://0x0.st/example.txt
.fi
.P
.RE



.SH EXIT STATUS
.B brl
.R returns the 0 on success and 1 on failure, except for \fBbrl which\fR which always returns 0.
.SH FILES
.I /bedrock/etc/strata.conf
.R \- holds configuration for the current system's strata
.P
.I /bedrock/strata/
.R Holds the installed strata, as well as symbolic links representing strata aliases
.SH NOTES
.B brl
previously executed a command in all enabled strata until Bedrock Linux 0.7.0 Poki
.SH BUGS
Please report any bugs you find by opening an issue at \fIhttps://github.com/bedrocklinux/bedrocklinux\-userland\fR or talking to \fIparadigm\fR in \fI#bedrock\fR on \fIirc.freenode.com\fR.
.SH SEE ALSO
.B strat(1)

